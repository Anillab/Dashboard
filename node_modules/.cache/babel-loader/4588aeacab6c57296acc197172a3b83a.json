{"ast":null,"code":"var _jsxFileName = \"/home/anilla/ruby/src/components/GroupStatement.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst TAX_RATE = 0.07;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n}); // function ccyFormat(num) {\n//   return `${num.toFixed(2)}`;\n// }\n\nfunction createRow(desc, qty, unit) {\n  return {\n    desc,\n    qty,\n    unit,\n    price\n  };\n} // function subtotal(items) {\n//   return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n// }\n\n\nconst rows = [createRow('Paperclips (Box)', 100, 1.15), createRow('Paper (Case)', 10, 45.99), createRow('Waste Basket', 2, 17.99)]; // const invoiceSubtotal = subtotal(rows);\n// const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n// const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\nconst GroupStatement = () => {\n  const classes = useStyles();\n  return React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"spanning table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    colSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Details\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Price\")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Desc\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Qty.\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Unit\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sum\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, row.desc), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, row.qty), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, row.unit), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, row.price))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    rowSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(TableCell, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Subtotal\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, invoiceSubtotal)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Tax\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, invoiceTaxes)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Total\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, invoiceTotal)))));\n};\n\nexport default GroupStatement;","map":{"version":3,"sources":["/home/anilla/ruby/src/components/GroupStatement.jsx"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TAX_RATE","useStyles","table","minWidth","createRow","desc","qty","unit","price","rows","GroupStatement","classes","map","row","invoiceSubtotal","invoiceTaxes","invoiceTotal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst TAX_RATE = 0.07;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\n// function ccyFormat(num) {\n//   return `${num.toFixed(2)}`;\n// }\n\n\n\nfunction createRow(desc, qty, unit) {\n  return { desc, qty, unit, price };\n}\n\n// function subtotal(items) {\n//   return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\n// }\n\nconst rows = [\n  createRow('Paperclips (Box)', 100, 1.15),\n  createRow('Paper (Case)', 10, 45.99),\n  createRow('Waste Basket', 2, 17.99),\n];\n\n// const invoiceSubtotal = subtotal(rows);\n// const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n// const invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\n\nconst GroupStatement = ()=>{\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"spanning table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" colSpan={3}>\n              Details\n            </TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Desc</TableCell>\n            <TableCell align=\"right\">Qty.</TableCell>\n            <TableCell align=\"right\">Unit</TableCell>\n            <TableCell align=\"right\">Sum</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.desc}>\n              <TableCell>{row.desc}</TableCell>\n              <TableCell align=\"right\">{row.qty}</TableCell>\n              <TableCell align=\"right\">{row.unit}</TableCell>\n              <TableCell align=\"right\">{row.price}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={3} />\n            <TableCell colSpan={2}>Subtotal</TableCell>\n            <TableCell align=\"right\">{invoiceSubtotal}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Tax</TableCell>\n            <TableCell align=\"right\">{invoiceTaxes}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={2}>Total</TableCell>\n            <TableCell align=\"right\">{invoiceTotal}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nexport default GroupStatement\n"]},"metadata":{},"sourceType":"module"}