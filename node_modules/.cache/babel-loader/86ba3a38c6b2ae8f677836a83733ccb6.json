{"ast":null,"code":"var _jsxFileName = \"/home/anilla/ruby/src/container/LoginContainer.jsx\";\nimport React, { Component } from 'react';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\nclass LoginContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      User: {\n        code: 'APX01',\n        password: '.........'\n      }\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handlePass = this.handlePass.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.User;\n    fetch('http://example.com', {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      User: {\n        code: '',\n        password: ''\n      }\n    });\n  }\n\n  handlePass(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      User: { ...prevState.User,\n        password: value\n      }\n    }), () => console.log(this.state.User));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      User: { ...prevState.User,\n        [name]: value\n      }\n    }), () => console.log(this.state.User));\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"form\", {\n      className: \"contaier-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Instution Code\",\n      name: \"code\",\n      value: \"assafasaf\" // placeholder={'Enter The Instution Code'}\n      // handleChange={this.handleInput}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      inputType: \"password\",\n      title: \"Password\",\n      name: \"password\",\n      value: \"safafdsgdf\" // placeholder={'Enter  Password'}\n      // handleChange={this.handlePass}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" \", React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: 'primary',\n      title: 'Submit',\n      style: buttonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      action: this.handleClearForm,\n      type: 'secondary',\n      title: 'Clear',\n      style: buttonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst buttonStyle = {\n  margin: '10px 10px 10px 10px'\n};\nexport default LoginContainer;","map":{"version":3,"sources":["/home/anilla/ruby/src/container/LoginContainer.jsx"],"names":["React","Component","Input","Button","LoginContainer","constructor","props","state","User","code","password","handleFormSubmit","bind","handleClearForm","handlePass","handleInput","e","preventDefault","userData","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","setState","value","target","prevState","name","render","buttonStyle","margin"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\n\nimport Input from '../components/Input';\nimport Button from '../components/Button'\n\n\nclass LoginContainer extends Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n       User:{\n        code:'APX01',\n        password:'.........'\n      },\n    }\n    this.handleFormSubmit=this.handleFormSubmit.bind(this);\n    this.handleClearForm=this.handleClearForm.bind(this);\n    this.handlePass=this.handlePass.bind(this);\n    this.handleInput=this.handleInput.bind(this);\n  }\n  handleFormSubmit(e){\n    e.preventDefault();\n    let userData=this.state.User;\n    fetch('http://example.com',{\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n      }).then(response => {\n        response.json().then(data =>{\n          console.log(\"Successful\" + data);\n        })\n    })\n  }\n  handleClearForm(e){\n    e.preventDefault();\n    this.setState({\n      User:{\n        code:'',\n        password:''\n      },\n    })\n  }\n  handlePass(e){\n    let value =e.target.value;\n    this.setState(prevState =>({\n      User:{...prevState.User,password:value}\n    }),()=>console.log(this.state.User))\n  }\n  handleInput(e){\n    let value =e.target.value;\n    let name=e.target.name;\n  this.setState(prevState =>({\n    User:{...prevState.User,[name]:value\n    }\n  }),()=>console.log(this.state.User))\n  }\n  render(){\n    console.log(this.props);\n    return(\n\n      <form className=\"contaier-fluid\" onSubmit={this.handleFormSubmit}>\n       <Input inputType=\"text\"\n              title=\"Instution Code\"\n              name=\"code\"\n              value=\"assafasaf\"\n              // placeholder={'Enter The Instution Code'}\n              // handleChange={this.handleInput}\n\n\n       /> {/* MFI code*/}\n       <Input inputType=\"password\"\n              title=\"Password\"\n              name=\"password\"\n              value=\"safafdsgdf\"\n              // placeholder={'Enter  Password'}\n              // handleChange={this.handlePass}\n       /> {/* MFI password*/}\n       <Button\n         action={this.handleFormSubmit}\n         type={'primary'}\n         title={'Submit'}\n         style={buttonStyle}\n        />{/* Submit*/}\n       <Button\n       action ={this.handleClearForm}\n       type={'secondary'}\n       title={'Clear'}\n       style={buttonStyle}\n\n       />{/* Clear the form*/}\n\n      </form>\n    );\n  }\n}\nconst buttonStyle={\n  margin:'10px 10px 10px 10px'\n}\n\n\n\nexport default LoginContainer;\n"]},"metadata":{},"sourceType":"module"}